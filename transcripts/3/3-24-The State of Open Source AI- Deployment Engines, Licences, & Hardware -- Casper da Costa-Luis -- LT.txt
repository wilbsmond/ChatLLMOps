[Music] Jasper the state of Open Source AI right yes indeed and I'm going to dissolve into the background and give you Center Stage right awesome uh yeah so I'm I'm Casper and I've been working seriously on open source projects for about a decade now um I have maybe a somewhat unconventional background compared to most in the field I did a stint in Academia after getting into software rather than the other way around um computational physics Medical Imaging that sort of thing anyway I'm back in Industry now good to be back mostly um one thing I've realized is that open source development is fast-paced and l&m's are also developing in a fast-paced way and when you combine those two everything seems to be moving at light speed um and moving at relativistic speeds even boring topics like licenses become interesting so on that topic um I'd like to talk about more than just code licenses there's lots of other subtopics so uh let's delve in um effectively I think there are two license categories broadly uh one is extremely structured work so software licenses and the other would be a category for General content such as data images prosaic text and uh the problem I think we have is your machine learning code could be licensed under let's say Apache 2 but trained on Text data that is licensed under CC creative comons and the question is what about the resultant model the trained weights which license would apply um now maybe in this particular example both licenses have a similar intention in in effect they want you to site the author and there's basically no other restrictions but they still might not be compatible um the Apache for example specifically mentions compatibility with other code licenses but it doesn't mention compatibility with non-code licenses like Creer con um and what happens if in your case you have two licenses that are even further apart than this example um you're probably really in trouble in that case and there's very little legal precedence almost nobody knows what really should and does happen um it almost depends on how much you pay your lawyers um anyway uh there's also problem over the use of the word open uh often marketing material PR to products as open and I think that's a deliberately vague word they don't specify whether they mean open source or open licensed um typically if something is open sourc it means it's also openly licensed but the inverse is often not true and depending on your use case something being solely openly licensed might be good enough but uh do be aware that this violates the OSI the open source initiatives definition of of an open uh an open piece of software but maybe it's good enough uh typically you might only care whether or not you can use it commercially um but on the topic of licenses so the legal aspect of the word open um there's even further subcategories technically you can call all these things open from public domain which is technically not a license it means it's a freefor all down to something more permissive like your Apache 2 license um all the way up to copy left licenses which are often called viral or infectious effectively you try and enforce all derivations all modified versions of your software also have to use the same license but technically this can be an open license as well so if you were trying to choose a license for your own project let's say you want to open source something um there are some resources maybe this is tangential maybe you don't care about open sourcing things maybe you just want to use other people's open source stuff um but when it comes to software I think there are eight popular licenses you could pick from um my personal favorite is the npl the Milla public license CU it I think it combines the permissiveness and compatibility of the Apachi 2 with a a weak file level copy left version of the lgpl 3 um when you're talking about data I would pick one of the three creative common licenses and uh there are other things like Hardware certain has come up with the suite of licenses for for open hardware and uh if you if you care to go through the hundreds of other open licenses out there there there will be links the end um one problem though is yes you might have a great license but who's actually going to enforce this unless you're a big company losing lots of money on something often it seems in practice people turn a blind eye which is a bit of an issue um it also depends on which country you're in it might even be okay perfectly legally acceptable to completely ignore a license just because somebody is added a license doesn't mean that you have to actually abide by it in certain circumstances right um so in the USA you have fair use laws and the UK you have Fair dealing laws um it's a bit awkward when you have an international company that is providing web services to multiple countries because then are you obliged to have a different set of services depending which country you're serving the the usual approach is to just not serve all countries um which leads me to discrimination um open AI itself uh maintains a list of countries where it doesn't often offer its chat GPC services to um but it doesn't ever offer an explanation so it's not clear whether it's because those countries are banded or is it because it doesn't think it's profitable enough to operate in some countries is it politics so there is really a lack of Regulation and oversight um it it many ways big companies might be fulfilling the the role of governments which is not that great since they're considerably less Democratic one personal problem that I have I I I really dislike this is that of the literally 100 plus OSI open source initiative approved licenses every single one has a massive no warranty Clause um which means that even if a billion people and their livelihoods depend on your code nobody can can find fault with you or have any recourse compensation if the code breaks and they lose their livelihoods um so purely in the interest of Public Safety the EU has has proposed the CR C and the pla um aiming to to stop profiteering companies um some nonprofits are also objecting to these laws they haven't yet been introduced they're they're still in a consultation phase but I think it's it's a bit odd there's a lot of fake news I would say and deliberately twisting the aim of this law so in some ways I think we even have open source developers fighting on behalf of close- source developers which makes no sense but anyway there's more links to this at the end um I I've given entire talks on this in the past but uh it's it's ongoing and then hopefully things will be sorted out in the next couple of years um enough of a rabbit hole I I think we're running out of time anyway so back to proper software self inference engines which uh is probably the main part of deployment in in this case um I'm going to switch to my backup slides which are shorter there we go um so if like me you are sick with the tendency to suffix Ops after every acronym uh rest assured there might be some reason here to have llm Ops um specifically the focus is on fine-tuning here you could say that fine-tuning and training are maybe similar things except they they take less time rather than less memory but um there's your minor distinction so tldr here's the start of a comparison table of uh inference engines um the ease of use column might be contentious perhaps uh there is a full explanation on uh this which is a book which we have just open sourced so we wrote an entire entire book one chapter per topic there's there's some example chapters there as well which might interest you um I I say it's open source as of now GitHub actions is still hanging it's meant to Take 5 minutes to actually build this but it's a couple of hours and it still hasn't released it so hopefully in the next few minutes this will actually be properly open sourced um but the the book itself is still visible you just don't see the source code yet but you are all welcome to uh contribute to it um it's completely free we we don't ask for anything in return uh how are we doing for time couple minutes well I'll briefly mention Hardware there and um there's probably a link between hardware and software and a lot of the traditional Hardware manufacturers quite tightly couple their software to things it's probably historically to lock you in but nowadays it's becoming more and more for Hassle and I hope that we are moving towards a better State of Affairs where we don't have to constantly rewrite code um a particular problem with llm since the purpose of this uh this whole conference um they often need a lot of GPU RAM and in the long term my feeling is that this is not going to be so much of a problem because we're going to start Distributing computes and we'll also have maybe smaller models that are just more intelligent with whatever weights and memory that they are making use of uh but in the short term one solution might be to use the cloud rent Cloud Hardware uh here's a few links the three of the most common links I think people use to compare the cost of these gpus and again Links at the end you can go to the the Open Source book but tldr I do think that long-term on Prem is probably just a better solution it's going to be cheaper it's more secure and the usual counterargument which is it's a pain to maintain is probably becoming less and less of an issue there are a lot of nice tools out there I mean right now was thinking of hooking up G sub actions to my own machine so it just runs quicker and it it would have taken me a few minutes I might even do that at the end of the presentation so the the infrastructure that surrounds things is is getting a lot better I would say um the problem is on the software side I would say right now and I think we have been promised a solution to this for years and it's effectively your simmed code is not portable so you have to write different code for each Target device and uh I hope that web GPU is going to solve this but it was meant to solve it years ago um effectively the idea is that your browser Auto detects your device and automatically compiles for your local H Ware so um yeah that's all uh please check out the book uh Casper put the book URL in the gradual link I think you should do that too uh sure I screenshot of this I think people should definitely uh check it out cther thank you very much uh for your work and for coming to present it with [Music] us