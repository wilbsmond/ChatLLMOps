and I believe our next speaker is somewhere around the Bay Area did I get that right Tristan [Music] that's absolutely right here so I gotta I gotta tell you the story about Oakland uh totally not what your thing is going to be no I I live in the middle of nowhere Germany right and there's like 100 people that live in my town and in the next town over where I go running there's a guy he's got to be from Oakland he's just got gigantic Raiders everywhere everything is Raiders and it is uh it's so much so that I one day I'm going by and he's having a barbecue outside and I'm just like dude what's the deal huge Raiders fan he's from Bay Area also and I realize now after saying that story it's not as good as I thought it was gonna be well we definitely have some Oakland Pride here oh man so Tristan we're cruising we're gonna do start slicing it up and doing some 10 minute lightning talks I'm gonna throw 10 minutes on the clock and of course if anyone wants to learn more about what you all are doing at continual you've got a booth in the solutions tab so hit the left hand button it says Solutions and you can go through and you can find all the different booths that we've got and all of the cool stuff there's great different swag that's being handed out and there's all kinds of uh there's all kinds of insights that you can find so Tristan before I take up any more of your time man I'm Gonna Let You cruise through this and I will jump off the stage I think yeah I see your screen being shared and it's actually I'm seeing myself right now on my screen so I'll let you go to your store there we go I see your slime full screen here full screen all right I'll talk to you soon all right awesome well uh this will be a quick one so um uh 10 minutes or less um and today I'm really excited to talk about um building production AI co-pilots uh hi my name is Tristan I'm the co-founder uh and CEO of continual.ai if you want to see what we do check us out at continual.ai um we're building a developer platform for generative AI with a focus on helping people build AI co-pilots for their SAS applications uh I previously was a CTO for machine learning at Cloudera uh built one of the early mlop platforms that was called sets which clutter acquired which is basically a short introduction in a way of saying that I suffered for the last 10 years uh in trying to make Ai and ml easy um by building sort of standard ml Ops uh tools and today I want to talk about something uh different that I'm extremely excited by um it's a basic belief that the software experiences that we all are going to have um across both our consumer applications but more importantly I think our business and business applications are about to fundamentally change um we're entering an era of AI co-pilots and what does that exactly mean and uh and what does it mean for us uh both as consumers of these applications in terms of how the application how our experiences will change but also more importantly what I want to talk about is how does it change for Builders uh people as people that want to put AI into the world um how do we go about doing that so A few observations first up uh off the top um I think ml Ops traditional ml Ops will mostly be irrelevant um I think AI co-pilots will not replace existing applications and I'll talk about that in a little bit and I think there will not be a single personal AI copilot uh that rules them all so it's not lit we're going to only talk to BT and chat GPT is going to orchestrate every single application instead when I when I think I think what we're entering when I say the era of AI co-pilots is an era where every single application out there within every single vertical domain will be enhanced by its own specialized customized tailored AI co-pilot that adds connectivity to the data that's sitting inside of that application the apis that that application uh uh has uh and um and is deeply tailored to the workflows of the end user whether that's a marketer a sales person a doctor a teacher a student a scientist um all of the uh you know the mechanical engineer all of those things will will be using their own AI co-pilot um you know this is an example of uh epic I mean this is an example of why I believe that AI co-pilots are going to be embedding embedded into existing applications rather than replacing the applications or having a single AI uh co-pilot for all applications this is an incredibly complicated domain-specific application with a tremendous amount of uh sort of uh data around in this case patients uh and I don't think there's any way that a single AI system or or conversational interface is going to replace uh this instead what's going to happen is these types of applications are going to be fundamentally transformed now what do we mean uh by fundamentally transform these applications what are these AI copilots going to look like if they are embedded into um these traditional applications I think there are three um emerging patterns for how AI co-pilots get embedded into the applications the first is one that we all know and love which is uh or knowing uh or certainly love more and more uh over the last nine months since the introduction of chat GPT um which is the conversational experience into applications and so we're starting to see this in more and more of applications already today um copilot chat uh copilotx.org github's copilot x uh is introducing a chat experience um uh Beyond sort of the autocomplete experience that they have and this the chat experience while I do not believe it will replace you know the entire application does have incredible use cases around knowledge Discovery uh ad hoc query uh information retrieval uh and it's a very natural user interface um that everybody uh is used to so um I think that when I foresee happening is that every application education will add a conversational user experience on top of their existing application both connected to the underlying data connected to the apis and then specialize uh to their particular application context um the second dominant pattern I see is is not just having an AI chat on the sidebar but actually trying to put AI into the micro workflows of individual users and so here's an example from hex I think this is one of the best examples of what I would call a copilot command or a copilot action uh and here they're showing how you can write analytical queries you know using sort of uh in this case still natural language uh to a SQL query um and and that can give you relatively complicated SQL queries or it can do other things for instance fixing and suggesting fixes for mistakes or suggesting improvements and so here you're seeing a co-pilot commands in the uh in in the analytical domain but you can also think about the similar experiences that you might have seen in for instance notion around uh you know uh writing uh content which has a similar sort of uh type of functionality and user experience the final one is I think we're also going to see an increasingly more and more Copilot automations these are full automations of user workflows uh this particular one is again from GitHub copilot X um which is uh in this case uh doing automations on a pull request so as soon as you open a pull request there's an event driven uh agent or workflow that is kicked off that you know looks for bugs improves you know makes code review suggestions summarize what's inside of the uh the the code review and so increasingly I think we're going to move to a world where co-pilots not only can we can ask copilots for things but we can they'll also automate our work the net user benefits here are help you know illuminate or enrich the information inside of our applications and provide insights um help us complete tasks and streamline our workflows and then finally help us fully automate tasks and potentially even work autonomously with limited or no intervention from the end user so the question then becomes okay you know these are putting production AI systems inside of the applications that many of us are building how do we think about building these uh particular experiences and I want to argue uh that there's a uh thinking about it holistically as uh the AI inside your application as a co-pilot system uh provides a unifying view to thinking about uh how to embed these different types of uh of of user experiences uh into your applications still being powered by a core engine that is connected to the data the context uh the apis of your individual application or of the individual application domain so they're the co-pilot production co-pilot system um we've been working on several continual um but the production uh co-pilot system really I think has three layers so the first is the new user experience we need to think about how are we going to embed uh the AI experience into the user workflow uh and as I you know just mentioned I think there are three primary uh user experiences the conversational experience which is a chat or a chatbot a command oriented experience which is often in line to particular uh particular workflow or uh where you're trying to do a sort of a one-turn tap uh not have an ongoing sort of interactive conversation with the system and the final one is automation a way for these systems to have uh uh automated processes that are continually reacting to events that are happening inside of your application uh and and enriching and enhancing and automating uh the the information inside of inside of the application so the front end is those user experiences and there's you know that's traditional sort of user experience design they then I think will come into a router the way we think about it is uh these different uh user experiences talk to a common router which routes it to the internal uh you know AI system that is most tailored to a particular domain so you may have you know your text to SQL engine uh that may go to a particular agent uh behind the scenes uh that is specialized in doing text to SQL you may have a conversational support bot that may be a slightly different agent so from from multiple user experiences that you'll go into a router uh that will then go to multiple potential agent inter agents and uh in interaction by agents I mean A system that has the capability and AI system powered by typically a foundation model like the open AI chat GPT models um that has both the capability to respond to natural language uh to queries but also the the capability to decide on what tools or functions to call and so the layer below the the agent uh would be your your plug-in layer and so this is I think the what openai is doing here uh and the announcements they actually just made earlier this week uh are the right architecture for building these are the foundational architecture for building these AI copilots so openai just announced function calling that allows the agent uh to decide and make a decision on what function or plug-in to call uh in the in the in the and the information to pass into that underlying plug-in plug-ins provide a unified interface to all of your external uh uh systems and so that could be your data so we could you could use a plug-in to connect to a search index or a vector index and look up additional context you could look you could use that plugin to store information into the data set you could use it to connect to an external system so if you're a connected person to your sales system and talking to an external service API you could do that uh and it will also allows you to talk to more deterministic workflows so you if you have workflows that are very specific you can build and have those plugins actually connect to those internal workflows and then finally you can actually make this whole system recursive you can have agents that talk to agents and so if there's a specialized agent that you know itself potentially has a limited set of plugins you can actually create a hierarchical system of of agents and as these co-pilot systems become more and more uh sophisticated I think what you'll see is this sort of this General architecture and then this recursive nature to this architecture so you can decompose uh different elements of your stack so on the final uh you know side we have observability and guard routes of course observability and across this entire process is incredibly important so what are the top challenges to putting these co-pilot systems into production I think there's really honestly just one and that's reliability and performance um and so I just want to give a few tips uh uh uh in terms of you know different ways to kind of uh that are relatively straightforward in terms of ways to make sure these AI copilots perform well so the first one is obvious start simple you know even simple AI copilot features can significantly improve products I've talked to actually multiple Founders who have put AI copilots into their products and have seen like significant uplift um from from basic plans to premium plans um and ultimately a user satisfaction um observe and watch user Behavior like a hawk so when you're starting out every single conversation or every single action you can honestly just look at it and see is it working is it not working you can honestly without you know structure even structured testing you can fix a lot of problems very quickly by observing uh the actions of your users the the final thing that I would call level one which are these easy fixes is isolate complicated areas of your domain because if you're doing Rich analytical queries into narrower sub workflows or agents that can be tested more formally more easily so don't try to make one agent that does everything and decides everything plans out everything instead decompose it where you have more control over some areas but maybe more Dynamic uh planning at a higher level in terms of level two as you become more sophisticated in production what what do you need to do the first is build automated evaluations and integrate them into your CI CD system so particularly if you're doing difficult analytical queries or difficult automations you really need a formalized evaluation system build how then do you get feedback and improve your system I think one of the most powerful ways is actually to build and maintain a uh build a system to maintain and dynamically inject few shot examples into your products uh so this is a great way where you can collect feedback see problems propose Solutions and not pollute your prompt is a huge prompt but instead dynamically inject the kind of closest examples that you have into your prompt and that can create a data engine for your application without getting into the complexity of fine-tuning uh your own model and finally try to create delightful and magical experience one way that we've seen this being incredibly powerful is you actually treat your front end like another plug-in API that the agent can manipulate and that actually can change the user experience and make the user experience uh quite dynamic so with that I guess this is just a call to let's build AI co-pilots into our applications uh and if you are interested in doing this for your own application or just interested or business and you're interested in co-pilots in general uh or have thoughts on this General topic please email me Tristan continual.ai or you can sign up for Early Access to our platform at continual.ai thanks a lot so I have so many things first of all I love this idea second of all it feels like what I've seen being implemented with this idea has not worked as of yet and there is this huge desire for it but it is like yeah I mean you mentioned openai has just come out with it so hopefully that makes things that are built with these plugins and all of this um these functions more stable but it is uh it is something that I I really wonder about I mean it's no small feat to try and take this on Tristan what gives you the confidence man I can't believe it well I think I think the critical thing is you know we believe that basically these AI copilots are going to enhance your existing applications not replace them and that's not so you can choose and pick and choose hey what are the workflows or what are the sort of the challenges that a user might have where the AI can enhance it right so we're already seeing for instance that just to do basic support queries right this sort of like chat with your docs use case it actually makes a ton that's very simple right you can Implement that you know in Lang chain or something you know pretty quick yourself you know it's a little bit hard when you get production to kind of making a production system but the basic kind of idea of chatting with your documentation actually is in a really really useful product feature right it's a better way than searching your docs in many cases and then I think with hex you know you can see an example of like a very narrow use case um for instance fix your bugs you know if you have something that executes wrong and you have a type error and then you can fix that right in line and often you can't see that you're missing a comma somewhere but it can immediately uh do that I think ultimately these things are going to become incredibly Rich right you know these autonomous agents that people are you know kind of getting excited about will become actually things that work uh right now that's not the case but if you think about the next couple years that that I think that will be the case I think all software will have this idea of you know my software AI or my software co-pilot uh inside of them as part of a core feature of the product yeah it's so good I mean you hit the nail on the head in the llms in production report that we just put out and I will do a Shameless plug right here if anybody wants to download it free no email needed or anything but we just put this survey out right and it's the report that I've been grappling with this data for the last three months or so even more probably now and it's very much that question of what parts of my workflow get fully replaced and what parts of my workflow get augmented and where and how do I know what each part is like there it's very it's not clear at all right now so I think we're exploring this unknown together trying to figure out what exactly is it that is going to get replaced what's going to get augmented and how can we find that out yeah no absolutely and I think it's uh I think it's going to be both I mean I think even you know to be you know you can say it'll be 99 replaced but that's still a version of augmentation so I think a lot of stuff will become more and more automated uh co-pilots I do think will ship more and more towards these this fully automated uh uh sort of um task completion um but you know you will still interact with them potentially conversationally for sure I think everybody will have a conversational interface and then there'll be all these uh sort of enhancements as well into the product but that all can I think be powered by the idea of a co-pilot system you know where that has that connectivity to the data the apis is making decisions around what to do I think there's sort of a unified way to sort of think about how do you build that if you were an application Builder but we're certainly still in the early Innings 100 um so all right man I've gone way over on time because I love this agent idea and I love talking to you I'm gonna kick you off now though lovingly and I will see you when I'm in San Francisco in two weeks thank you thank you